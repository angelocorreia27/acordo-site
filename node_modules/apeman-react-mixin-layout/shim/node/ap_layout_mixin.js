/**
 * @module ApLayoutMixin
 */
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _deepEqual = require('deep-equal');

var _deepEqual2 = _interopRequireDefault(_deepEqual);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LAYOUT_DELAY = 80;

var ApLayoutEvent = function ApLayoutEvent(values) {
  _classCallCheck(this, ApLayoutEvent);

  var s = this;
  Object.assign(s, values);
};

/** @lends ApLayoutMixin */


var ApLayoutMixin = {

  // --------------------
  // Custom
  // --------------------

  $apLayoutMixin: true,

  /**
   * Do layout
   * @param {boolean} [immediate] - Execute with no time
   */
  layout: function layout() {
    var immediate = arguments.length <= 0 || arguments[0] === undefined ? false : arguments[0];

    var s = this;
    clearTimeout(s._layoutTimer);
    s._layoutTimer = setTimeout(function () {
      if (!s._readyToLayout) {
        return;
      }
      var props = s.props;

      var layouts = s.calcLayouts && s.calcLayouts();
      var changed = !(0, _deepEqual2.default)(s.layouts, layouts);
      if (changed) {
        s.layouts = layouts;
        s.forceUpdate();
        if (props.onLayout) {
          var event = new ApLayoutEvent({ layouts: layouts });
          props.onLayout(event);
        }
      }
    }, immediate ? 0 : LAYOUT_DELAY);
  },


  /**
   * Layout data
   */
  layouts: {},

  // --------------------
  // Specs
  // --------------------

  propTypes: {
    /** Handler for layout event */
    onLayout: _react.PropTypes.func
  },

  statics: {
    ApLayoutEvent: ApLayoutEvent,
    LAYOUT_DELAY: LAYOUT_DELAY
  },

  // --------------------
  // Lifecycle
  // --------------------

  componentWillMount: function componentWillMount() {
    var s = this;
    if (s.getInitialLayouts) {
      s.layouts = s.getInitialLayouts();
    }
  },
  componentDidMount: function componentDidMount() {
    var s = this;
    if (!s.calcLayouts) {
      console.warn('[ApLayoutMixin] Should implement .calcLayouts()');
    }
    window.addEventListener('resize', s.layout);
    s._readyToLayout = true;
    s.layout(true);
  },
  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
    var s = this;
    s.layout();
  },
  componentWillUnmount: function componentWillUnmount() {
    var s = this;
    s._readyToLayout = false;
    clearTimeout(s._layoutTimer);
    window.removeEventListener('resize', s.layout);
    delete s._layoutTimer;
  },


  // --------------------
  // Private
  // --------------------

  _readyToLayout: false
};

exports.default = ApLayoutMixin;
//# sourceMappingURL=data:application/json;base64,bnVsbA==