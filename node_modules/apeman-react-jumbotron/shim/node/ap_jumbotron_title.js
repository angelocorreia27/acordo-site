/**
 * Title jumbotron
 * @class ApJumbotronTitle
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApJumbotronTitle */
var ApJumbotronTitle = function (_Component) {
  _inherits(ApJumbotronTitle, _Component);

  function ApJumbotronTitle() {
    _classCallCheck(this, ApJumbotronTitle);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApJumbotronTitle).apply(this, arguments));
  }

  _createClass(ApJumbotronTitle, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;


      return _react2.default.createElement(
        'h1',
        { className: (0, _classnames2.default)('ap-jumbotron-title', props.className),
          style: Object.assign({}, props.style) },
        props.children
      );
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      var s = this;
      var props = s.props;
      var state = s.state;

      return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
    }
  }]);

  return ApJumbotronTitle;
}(_react.Component);

Object.assign(ApJumbotronTitle, {

  // --------------------
  // Specs
  // --------------------

  propTypes: {},

  defaultProps: {}
});

exports.default = ApJumbotronTitle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2p1bWJvdHJvbl90aXRsZS5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBS0E7Ozs7Ozs7O0FBRUE7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7Ozs7O0FBRUE7SUFDTSxnQjs7Ozs7Ozs7Ozs7NkJBQ007QUFDUixVQUFNLElBQUksSUFBVjtBQURRLFVBRUYsS0FGRSxHQUVRLENBRlIsQ0FFRixLQUZFOzs7QUFJUixhQUNFO0FBQUE7QUFBQSxVQUFJLFdBQVksMEJBQVcsb0JBQVgsRUFBaUMsTUFBTSxTQUF2QyxDQUFoQjtBQUNJLGlCQUFRLE9BQU8sTUFBUCxDQUFjLEVBQWQsRUFBa0IsTUFBTSxLQUF4QixDQURaO0FBRUksY0FBTTtBQUZWLE9BREY7QUFNRDs7OzBDQUVzQixTLEVBQVcsUyxFQUFXO0FBQzNDLFVBQU0sSUFBSSxJQUFWO0FBRDJDLFVBRXJDLEtBRnFDLEdBRXBCLENBRm9CLENBRXJDLEtBRnFDO0FBQUEsVUFFOUIsS0FGOEIsR0FFcEIsQ0FGb0IsQ0FFOUIsS0FGOEI7O0FBRzNDLGFBQU8sQ0FBQyx5QkFBYSxLQUFiLEVBQW9CLFNBQXBCLENBQUQsSUFBbUMsQ0FBQyx5QkFBYSxLQUFiLEVBQW9CLFNBQXBCLENBQTNDO0FBQ0Q7Ozs7OztBQUdILE9BQU8sTUFBUCxDQUFjLGdCQUFkLEVBQWdDOztBQUU5QjtBQUNBO0FBQ0E7O0FBRUEsYUFBVyxFQU5tQjs7QUFROUIsZ0JBQWM7QUFSZ0IsQ0FBaEM7O2tCQVdlLGdCIiwiZmlsZSI6ImFwX2p1bWJvdHJvbl90aXRsZS5qc3giLCJzb3VyY2VSb290IjoibGliIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaXRsZSBqdW1ib3Ryb25cbiAqIEBjbGFzcyBBcEp1bWJvdHJvblRpdGxlXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbmltcG9ydCBSZWFjdCwge0NvbXBvbmVudCwgUHJvcFR5cGVzIGFzIHR5cGVzfSBmcm9tICdyZWFjdCdcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5pbXBvcnQge3NoYWxsb3dFcXVhbH0gZnJvbSAnYXNvYmonXG5cbi8qKiBAbGVuZHMgQXBKdW1ib3Ryb25UaXRsZSAqL1xuY2xhc3MgQXBKdW1ib3Ryb25UaXRsZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxoMSBjbGFzc05hbWU9eyBjbGFzc25hbWVzKCdhcC1qdW1ib3Ryb24tdGl0bGUnLCBwcm9wcy5jbGFzc05hbWUpIH1cbiAgICAgICAgICBzdHlsZT17IE9iamVjdC5hc3NpZ24oe30sIHByb3BzLnN0eWxlKSB9PlxuICAgICAgICB7IHByb3BzLmNoaWxkcmVuIH1cbiAgICAgIDwvaDE+XG4gICAgKVxuICB9XG5cbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlIChuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgIGNvbnN0IHMgPSB0aGlzXG4gICAgbGV0IHsgcHJvcHMsIHN0YXRlIH0gPSBzXG4gICAgcmV0dXJuICFzaGFsbG93RXF1YWwocHJvcHMsIG5leHRQcm9wcykgfHwgIXNoYWxsb3dFcXVhbChzdGF0ZSwgbmV4dFN0YXRlKVxuICB9XG59XG5cbk9iamVjdC5hc3NpZ24oQXBKdW1ib3Ryb25UaXRsZSwge1xuXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNwZWNzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHJvcFR5cGVzOiB7fSxcblxuICBkZWZhdWx0UHJvcHM6IHt9XG59KVxuXG5leHBvcnQgZGVmYXVsdCBBcEp1bWJvdHJvblRpdGxlXG4iXX0=