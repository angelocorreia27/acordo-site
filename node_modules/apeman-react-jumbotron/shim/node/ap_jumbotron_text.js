/**
 * Text of jumbotron
 * @class ApJumbotronText
 */

'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _asobj = require('asobj');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/** @lends ApJumbotronText */
var ApJumbotronText = function (_Component) {
  _inherits(ApJumbotronText, _Component);

  function ApJumbotronText() {
    _classCallCheck(this, ApJumbotronText);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(ApJumbotronText).apply(this, arguments));
  }

  _createClass(ApJumbotronText, [{
    key: 'render',
    value: function render() {
      var s = this;
      var props = s.props;


      return _react2.default.createElement(
        'p',
        { className: (0, _classnames2.default)('ap-jumbotron-text', props.className),
          style: Object.assign({}, props.style) },
        props.children
      );
    }
  }, {
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      var s = this;
      var props = s.props;
      var state = s.state;

      return !(0, _asobj.shallowEqual)(props, nextProps) || !(0, _asobj.shallowEqual)(state, nextState);
    }
  }]);

  return ApJumbotronText;
}(_react.Component);

Object.assign(ApJumbotronText, {
  // --------------------
  // Specs
  // --------------------

  propTypes: {}
});

exports.default = ApJumbotronText;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwX2p1bWJvdHJvbl90ZXh0LmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFLQTs7Ozs7Ozs7QUFFQTs7OztBQUNBOzs7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQTtJQUNNLGU7Ozs7Ozs7Ozs7OzZCQUNNO0FBQ1IsVUFBTSxJQUFJLElBQVY7QUFEUSxVQUVGLEtBRkUsR0FFUSxDQUZSLENBRUYsS0FGRTs7O0FBSVIsYUFDRTtBQUFBO0FBQUEsVUFBRyxXQUFZLDBCQUFXLG1CQUFYLEVBQWdDLE1BQU0sU0FBdEMsQ0FBZjtBQUNHLGlCQUFRLE9BQU8sTUFBUCxDQUFjLEVBQWQsRUFBa0IsTUFBTSxLQUF4QixDQURYO0FBRUksY0FBTTtBQUZWLE9BREY7QUFNRDs7OzBDQUVzQixTLEVBQVcsUyxFQUFXO0FBQzNDLFVBQU0sSUFBSSxJQUFWO0FBRDJDLFVBRXJDLEtBRnFDLEdBRXBCLENBRm9CLENBRXJDLEtBRnFDO0FBQUEsVUFFOUIsS0FGOEIsR0FFcEIsQ0FGb0IsQ0FFOUIsS0FGOEI7O0FBRzNDLGFBQU8sQ0FBQyx5QkFBYSxLQUFiLEVBQW9CLFNBQXBCLENBQUQsSUFBbUMsQ0FBQyx5QkFBYSxLQUFiLEVBQW9CLFNBQXBCLENBQTNDO0FBQ0Q7Ozs7OztBQUVILE9BQU8sTUFBUCxDQUFjLGVBQWQsRUFBK0I7QUFDN0I7QUFDQTtBQUNBOztBQUVBLGFBQVc7QUFMa0IsQ0FBL0I7O2tCQVFlLGUiLCJmaWxlIjoiYXBfanVtYm90cm9uX3RleHQuanN4Iiwic291cmNlUm9vdCI6ImxpYiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGV4dCBvZiBqdW1ib3Ryb25cbiAqIEBjbGFzcyBBcEp1bWJvdHJvblRleHRcbiAqL1xuXG4ndXNlIHN0cmljdCdcblxuaW1wb3J0IFJlYWN0LCB7Q29tcG9uZW50LCBQcm9wVHlwZXMgYXMgdHlwZXN9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCB7c2hhbGxvd0VxdWFsfSBmcm9tICdhc29iaidcblxuLyoqIEBsZW5kcyBBcEp1bWJvdHJvblRleHQgKi9cbmNsYXNzIEFwSnVtYm90cm9uVGV4dCBleHRlbmRzIENvbXBvbmVudCB7XG4gIHJlbmRlciAoKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcyB9ID0gc1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxwIGNsYXNzTmFtZT17IGNsYXNzbmFtZXMoJ2FwLWp1bWJvdHJvbi10ZXh0JywgcHJvcHMuY2xhc3NOYW1lKSB9XG4gICAgICAgICBzdHlsZT17IE9iamVjdC5hc3NpZ24oe30sIHByb3BzLnN0eWxlKSB9PlxuICAgICAgICB7IHByb3BzLmNoaWxkcmVuIH1cbiAgICAgIDwvcD5cbiAgICApXG4gIH1cblxuICBzaG91bGRDb21wb25lbnRVcGRhdGUgKG5leHRQcm9wcywgbmV4dFN0YXRlKSB7XG4gICAgY29uc3QgcyA9IHRoaXNcbiAgICBsZXQgeyBwcm9wcywgc3RhdGUgfSA9IHNcbiAgICByZXR1cm4gIXNoYWxsb3dFcXVhbChwcm9wcywgbmV4dFByb3BzKSB8fCAhc2hhbGxvd0VxdWFsKHN0YXRlLCBuZXh0U3RhdGUpXG4gIH1cbn1cbk9iamVjdC5hc3NpZ24oQXBKdW1ib3Ryb25UZXh0LCB7XG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIFNwZWNzXG4gIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgcHJvcFR5cGVzOiB7fVxufSlcblxuZXhwb3J0IGRlZmF1bHQgQXBKdW1ib3Ryb25UZXh0XG4iXX0=